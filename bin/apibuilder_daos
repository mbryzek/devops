#!/usr/bin/env ruby

load File.join(File.dirname(__FILE__), '../lib/common.rb')

args = Args.parse(ARGV, [], { "app" => "list" })
organization = DevopsConfigFile.load.apibuilder_organization

def path_from_root(path)
  Pathname.new(File.join(`pwd`.strip, path)).cleanpath.to_s
end

UPDATE_SCRIPT = File.join(File.dirname(__FILE__), 'apibuilder_apps')
DAO_SPEC_DIR = path_from_root("dao/spec")

def upload(args, apps)
  cmd = "#{UPDATE_SCRIPT} --dir #{DAO_SPEC_DIR} --no_download"
  if profile = args.profile
    cmd << " --profile #{profile}"
  end
  apps.each do |app|
    cmd << " --app #{app}"
  end

  Util.run cmd
end

def generate_code(org, generator_key, dir, apps, profile=nil)
  if !File.directory?(dir)
    system("mkdir #{dir}")
  end
  apps.each do |app|
    cmd = "apibuilder code #{org} #{app} latest #{generator_key} #{dir}"
    if profile
      cmd = "PROFILE=#{profile} #{cmd}"
    end
    Util.run cmd
  end
end

apps = Dir.glob("#{DAO_SPEC_DIR}/*.json").map do |path|
  File.basename(path).sub(/\.json$/, '')
end

if apps.empty?
  Util.exit_with_error("Did not find any .json files in #{DAO_SPEC_DIR}")
end

filtered = if args.app
             args.app.each do |name|
               a = apps.find { |a| a == name }
               if a.nil?
                 Util.exit_with_error("Application '#{name}' not found in #{DAO_SPEC_DIR}")
               end
             end
             args.app.uniq
           else
             apps
           end

upload(args, filtered)

if !args.no_download
  generate_code(organization, "psql_scala", "./generated/app/db", filtered, args.profile)
  generate_code(organization, "psql_ddl", "./dao/psql", filtered, args.profile)
end
