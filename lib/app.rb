# This class generated by Chat GPT from example json structure

require 'json'

class App
  attr_accessor :name, :scala, :port, :elm

  def initialize(json_data)
    @name = json_data['name']
    @scala = json_data['scala'] ? ScalaConfig.new(json_data['scala']) : nil
    @port = json_data['port']
    @elm = json_data['elm'] ? ElmConfig.new(json_data['elm']) : nil
  end
end

class ElmConfig
  attr_accessor :rewrites

  def initialize(json_data)
    @rewrites = (json_data['rewrites'] || []).map { |d| ElmRewrite.new(d) }
  end
end

class ElmRewrite
  attr_accessor :from, :to

  def initialize(json_data)
    @from = json_data['from']
    @to = json_data['to']
  end
end

class ScalaConfig
  attr_accessor :artifact_name, :dist_run_script_name, :production, :development

  def initialize(json_data)
    @artifact_name = json_data['artifactName']
    @dist_run_script_name = json_data['distRunScriptName']
    @production = ScalaEnvironment.new(json_data['production'])
    @development = ScalaEnvironment.new(json_data['development'])
  end
end

class ScalaEnvironment
  attr_accessor :database, :nodes

  def initialize(json_data)
    @database = Database.new(json_data['database'])
    @nodes = json_data['nodes'].map { |node_data| Node.new(node_data) }
  end
end

class Database
  attr_accessor :name, :host, :user, :port

  def initialize(json_data)
    @name = json_data['name']
    @host = json_data['host']
    @user = json_data['user']
    @port = json_data['port']
  end
end

class Node
  attr_accessor :uri

  def initialize(json_data)
    @uri = json_data['uri']
  end
end
